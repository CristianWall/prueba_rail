#!/usr/bin/env python3
"""
Healthcheck espec√≠fico para Railway
Verifica que la aplicaci√≥n est√© funcionando correctamente
"""

import requests
import time
import sys

def healthcheck():
    """Verificar el estado de la aplicaci√≥n"""
    try:
        # Intentar conectar a la aplicaci√≥n
        response = requests.get('http://localhost:5000/health', timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Healthcheck exitoso: {data}")
            return True
        else:
            print(f"‚ùå Healthcheck fall√≥: {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå No se pudo conectar a la aplicaci√≥n")
        return False
    except Exception as e:
        print(f"‚ùå Error en healthcheck: {e}")
        return False

def wait_for_app(max_attempts=30, delay=2):
    """Esperar a que la aplicaci√≥n est√© lista"""
    print("‚è≥ Esperando a que la aplicaci√≥n est√© lista...")
    
    for attempt in range(max_attempts):
        if healthcheck():
            print("üéâ Aplicaci√≥n lista")
            return True
        
        print(f"‚è≥ Intento {attempt + 1}/{max_attempts} - Esperando {delay}s...")
        time.sleep(delay)
    
    print("‚ùå La aplicaci√≥n no respondi√≥ en el tiempo esperado")
    return False

if __name__ == "__main__":
    if wait_for_app():
        sys.exit(0)
    else:
        sys.exit(1)
